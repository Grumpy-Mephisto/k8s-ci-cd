apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  namespace: os-container-project
spec:
  storageClassName: local-storage
  capacity:
    storage: "100Mi"
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: "/var/lib/kafka"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k3s-master
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-claim
  namespace: os-container-project
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "100Mi"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_BROKER_ID: "1"
  KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
  KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
  KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: os-container-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      name: kafka
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - image: bitnami/kafka
          name: kafka
          envFrom:
            - configMapRef:
                name: kafka-config
          ports:
            - containerPort: 9092
          resources:
            requests:
              cpu: "512m"
              memory: "1Gi"
            limits:
              cpu: "512m"
              memory: "1Gi"
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: kafka-persistent-storage
              mountPath: "/bitnami"
      volumes:
        - name: kafka-persistent-storage
          persistentVolumeClaim:
            claimName: kafka-claim
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: os-container-project
spec:
  ports:
    - port: 9092
      targetPort: 9092
      protocol: TCP
  selector:
    app: kafka
